<?php

declare(strict_types=1);

use Your\Name\Space as Mine;

class A
{
	use This\Awesome\Thing;

	const PI = 3.14159265359;

	private function noop(int $x, \DateTime $d): ?string
	{
	}

	/**
	 * @var ?My\Prop
	 */
	protected $fooProp = null;

	$another;
}

abstract class B extends \Other\A implements \Iterable
{
	private static $∂;
}

trait TT
{
	static function uu(int $vv)
	{
		echo $vv::class;
	}
}

class M implements N, O\P
{
	use TT;

	static $uu;
}

final class Outer
{
	function theres()
	{
		$inner     = new
		class extends Outer {
			function noname()
			{
			}
		};
	}
}
