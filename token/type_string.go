// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Whitespace-2]
	_ = x[Comment-3]
	_ = x[DocComment-4]
	_ = x[Ident-5]
	_ = x[Int-6]
	_ = x[Float-7]
	_ = x[String-8]
	_ = x[Var-9]
	_ = x[InlineHTML-10]
	_ = x[symbolStart-11]
	_ = x[OpenTag-12]
	_ = x[CloseTag-13]
	_ = x[Dollar-14]
	_ = x[Backslash-15]
	_ = x[Qmark-16]
	_ = x[Lparen-17]
	_ = x[Rparen-18]
	_ = x[Lbrack-19]
	_ = x[Rbrack-20]
	_ = x[Lbrace-21]
	_ = x[Rbrace-22]
	_ = x[Add-23]
	_ = x[Sub-24]
	_ = x[Mul-25]
	_ = x[Quo-26]
	_ = x[Rem-27]
	_ = x[Pow-28]
	_ = x[And-29]
	_ = x[Or-30]
	_ = x[Xor-31]
	_ = x[Shl-32]
	_ = x[Shr-33]
	_ = x[Concat-34]
	_ = x[Coalesce-35]
	_ = x[Land-36]
	_ = x[Lor-37]
	_ = x[Inc-38]
	_ = x[Dec-39]
	_ = x[Assign-40]
	_ = x[Not-41]
	_ = x[Lt-42]
	_ = x[Gt-43]
	_ = x[Leq-44]
	_ = x[Geq-45]
	_ = x[Eq-46]
	_ = x[Neq-47]
	_ = x[Identical-48]
	_ = x[Nidentical-49]
	_ = x[Comma-50]
	_ = x[Colon-51]
	_ = x[DoubleColon-52]
	_ = x[Semicolon-53]
	_ = x[Ellipsis-54]
	_ = x[Arrow-55]
	_ = x[DoubleArrow-56]
	_ = x[Spaceship-57]
	_ = x[symbolEnd-58]
	_ = x[keywordStart-59]
	_ = x[Abstract-60]
	_ = x[As-61]
	_ = x[Break-62]
	_ = x[Case-63]
	_ = x[Catch-64]
	_ = x[Class-65]
	_ = x[Clone-66]
	_ = x[Const-67]
	_ = x[Continue-68]
	_ = x[Declare-69]
	_ = x[Default-70]
	_ = x[Do-71]
	_ = x[Else-72]
	_ = x[Enum-73]
	_ = x[Extends-74]
	_ = x[Final-75]
	_ = x[Finally-76]
	_ = x[Fn-77]
	_ = x[For-78]
	_ = x[Foreach-79]
	_ = x[From-80]
	_ = x[Function-81]
	_ = x[Global-82]
	_ = x[Goto-83]
	_ = x[If-84]
	_ = x[Implements-85]
	_ = x[Instanceof-86]
	_ = x[Insteadof-87]
	_ = x[Interface-88]
	_ = x[Match-89]
	_ = x[Namespace-90]
	_ = x[New-91]
	_ = x[Private-92]
	_ = x[Protected-93]
	_ = x[Public-94]
	_ = x[Readonly-95]
	_ = x[Return-96]
	_ = x[Static-97]
	_ = x[Switch-98]
	_ = x[Throw-99]
	_ = x[Trait-100]
	_ = x[Try-101]
	_ = x[Use-102]
	_ = x[While-103]
	_ = x[Yield-104]
	_ = x[keywordEnd-105]
}

const _Type_name = "IllegalEOFWhitespaceCommentDocCommentIdentIntFloatStringVarInlineHTMLsymbolStart<?php?>$\\?()[]{}+-*/%**&|^<<>>.??&&||++--=!<><=>===!====!==,:::;...->=><=>symbolEndkeywordStartabstractasbreakcasecatchclasscloneconstcontinuedeclaredefaultdoelseenumextendsfinalfinallyfnforforeachfromfunctionglobalgotoifimplementsinstanceofinsteadofinterfacematchnamespacenewprivateprotectedpublicreadonlyreturnstaticswitchthrowtraittryusewhileyieldkeywordEnd"

var _Type_index = [...]uint16{0, 7, 10, 20, 27, 37, 42, 45, 50, 56, 59, 69, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 110, 111, 113, 115, 117, 119, 121, 122, 123, 124, 125, 127, 129, 131, 133, 136, 139, 140, 141, 143, 144, 147, 149, 151, 154, 163, 175, 183, 185, 190, 194, 199, 204, 209, 214, 222, 229, 236, 238, 242, 246, 253, 258, 265, 267, 270, 277, 281, 289, 295, 299, 301, 311, 321, 330, 339, 344, 353, 356, 363, 372, 378, 386, 392, 398, 404, 409, 414, 417, 420, 425, 430, 440}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
