// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Whitespace-2]
	_ = x[Comment-3]
	_ = x[Ident-4]
	_ = x[String-5]
	_ = x[Var-6]
	_ = x[InlineHTML-7]
	_ = x[symbolStart-8]
	_ = x[OpenTag-9]
	_ = x[Dollar-10]
	_ = x[Backslash-11]
	_ = x[Qmark-12]
	_ = x[Lparen-13]
	_ = x[Rparen-14]
	_ = x[Lbrack-15]
	_ = x[Rbrack-16]
	_ = x[Lbrace-17]
	_ = x[Rbrace-18]
	_ = x[Assign-19]
	_ = x[Lt-20]
	_ = x[Gt-21]
	_ = x[Comma-22]
	_ = x[Colon-23]
	_ = x[Semicolon-24]
	_ = x[Ellipsis-25]
	_ = x[Or-26]
	_ = x[And-27]
	_ = x[Quo-28]
	_ = x[Shl-29]
	_ = x[Shr-30]
	_ = x[symbolEnd-31]
	_ = x[keywordStart-32]
	_ = x[Abstract-33]
	_ = x[As-34]
	_ = x[Break-35]
	_ = x[Callable-36]
	_ = x[Case-37]
	_ = x[Catch-38]
	_ = x[Class-39]
	_ = x[Clone-40]
	_ = x[Const-41]
	_ = x[Continue-42]
	_ = x[Default-43]
	_ = x[Do-44]
	_ = x[Else-45]
	_ = x[Elseif-46]
	_ = x[Extends-47]
	_ = x[Final-48]
	_ = x[Finally-49]
	_ = x[Fn-50]
	_ = x[For-51]
	_ = x[Foreach-52]
	_ = x[Function-53]
	_ = x[Goto-54]
	_ = x[If-55]
	_ = x[Implements-56]
	_ = x[Instanceof-57]
	_ = x[Insteadof-58]
	_ = x[Interface-59]
	_ = x[Namespace-60]
	_ = x[New-61]
	_ = x[Parent-62]
	_ = x[Private-63]
	_ = x[Protected-64]
	_ = x[Public-65]
	_ = x[Return-66]
	_ = x[Self-67]
	_ = x[Static-68]
	_ = x[Switch-69]
	_ = x[Throw-70]
	_ = x[Trait-71]
	_ = x[Try-72]
	_ = x[Use-73]
	_ = x[While-74]
	_ = x[keywordEnd-75]
}

const _Type_name = "IllegalEOFWhitespaceCommentIdentStringVarInlineHTMLsymbolStart<?php$\\?()[]{}=<>,:;...|&/<<>>symbolEndkeywordStartabstractasbreakcallablecasecatchclasscloneconstcontinuedefaultdoelseelseifextendsfinalfinallyfnforforeachfunctiongotoifimplementsinstanceofinsteadofinterfacenamespacenewparentprivateprotectedpublicreturnselfstaticswitchthrowtraittryusewhilekeywordEnd"

var _Type_index = [...]uint16{0, 7, 10, 20, 27, 32, 38, 41, 51, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 92, 101, 113, 121, 123, 128, 136, 140, 145, 150, 155, 160, 168, 175, 177, 181, 187, 194, 199, 206, 208, 211, 218, 226, 230, 232, 242, 252, 261, 270, 279, 282, 288, 295, 304, 310, 316, 320, 326, 332, 337, 342, 345, 348, 353, 363}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
