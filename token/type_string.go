// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Whitespace-2]
	_ = x[Comment-3]
	_ = x[DocComment-4]
	_ = x[Ident-5]
	_ = x[String-6]
	_ = x[Var-7]
	_ = x[InlineHTML-8]
	_ = x[symbolStart-9]
	_ = x[OpenTag-10]
	_ = x[CloseTag-11]
	_ = x[Dollar-12]
	_ = x[Backslash-13]
	_ = x[Qmark-14]
	_ = x[Lparen-15]
	_ = x[Rparen-16]
	_ = x[Lbrack-17]
	_ = x[Rbrack-18]
	_ = x[Lbrace-19]
	_ = x[Rbrace-20]
	_ = x[Assign-21]
	_ = x[Lt-22]
	_ = x[Gt-23]
	_ = x[Comma-24]
	_ = x[Colon-25]
	_ = x[Semicolon-26]
	_ = x[Ellipsis-27]
	_ = x[Or-28]
	_ = x[And-29]
	_ = x[Quo-30]
	_ = x[Shl-31]
	_ = x[Shr-32]
	_ = x[symbolEnd-33]
	_ = x[keywordStart-34]
	_ = x[Abstract-35]
	_ = x[As-36]
	_ = x[Break-37]
	_ = x[Callable-38]
	_ = x[Case-39]
	_ = x[Catch-40]
	_ = x[Class-41]
	_ = x[Clone-42]
	_ = x[Const-43]
	_ = x[Continue-44]
	_ = x[Default-45]
	_ = x[Do-46]
	_ = x[Else-47]
	_ = x[Elseif-48]
	_ = x[Extends-49]
	_ = x[Final-50]
	_ = x[Finally-51]
	_ = x[Fn-52]
	_ = x[For-53]
	_ = x[Foreach-54]
	_ = x[Function-55]
	_ = x[Goto-56]
	_ = x[If-57]
	_ = x[Implements-58]
	_ = x[Instanceof-59]
	_ = x[Insteadof-60]
	_ = x[Interface-61]
	_ = x[Namespace-62]
	_ = x[New-63]
	_ = x[Parent-64]
	_ = x[Private-65]
	_ = x[Protected-66]
	_ = x[Public-67]
	_ = x[Return-68]
	_ = x[Self-69]
	_ = x[Static-70]
	_ = x[Switch-71]
	_ = x[Throw-72]
	_ = x[Trait-73]
	_ = x[Try-74]
	_ = x[Use-75]
	_ = x[While-76]
	_ = x[keywordEnd-77]
}

const _Type_name = "IllegalEOFWhitespaceCommentDocCommentIdentStringVarInlineHTMLsymbolStart<?php?>$\\?()[]{}=<>,:;...|&/<<>>symbolEndkeywordStartabstractasbreakcallablecasecatchclasscloneconstcontinuedefaultdoelseelseifextendsfinalfinallyfnforforeachfunctiongotoifimplementsinstanceofinsteadofinterfacenamespacenewparentprivateprotectedpublicreturnselfstaticswitchthrowtraittryusewhilekeywordEnd"

var _Type_index = [...]uint16{0, 7, 10, 20, 27, 37, 42, 48, 51, 61, 72, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 102, 104, 113, 125, 133, 135, 140, 148, 152, 157, 162, 167, 172, 180, 187, 189, 193, 199, 206, 211, 218, 220, 223, 230, 238, 242, 244, 254, 264, 273, 282, 291, 294, 300, 307, 316, 322, 328, 332, 338, 344, 349, 354, 357, 360, 365, 375}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
