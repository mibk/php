// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Whitespace-2]
	_ = x[Comment-3]
	_ = x[Ident-4]
	_ = x[String-5]
	_ = x[VarName-6]
	_ = x[InlineHTML-7]
	_ = x[symbolStart-8]
	_ = x[OpenTag-9]
	_ = x[Backslash-10]
	_ = x[Qmark-11]
	_ = x[Lparen-12]
	_ = x[Rparen-13]
	_ = x[Lbrack-14]
	_ = x[Rbrack-15]
	_ = x[Lbrace-16]
	_ = x[Rbrace-17]
	_ = x[Lt-18]
	_ = x[Gt-19]
	_ = x[Comma-20]
	_ = x[Colon-21]
	_ = x[Semicolon-22]
	_ = x[Ellipsis-23]
	_ = x[Or-24]
	_ = x[And-25]
	_ = x[Quo-26]
	_ = x[symbolEnd-27]
}

const _Type_name = "IllegalEOFWhitespaceCommentIdentStringVarNameInlineHTMLsymbolStart<?php\\?()[]{}<>,:;...|&/symbolEnd"

var _Type_index = [...]uint8{0, 7, 10, 20, 27, 32, 38, 45, 55, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 99}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
