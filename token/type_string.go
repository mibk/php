// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Whitespace-2]
	_ = x[Comment-3]
	_ = x[DocComment-4]
	_ = x[Ident-5]
	_ = x[Int-6]
	_ = x[Float-7]
	_ = x[String-8]
	_ = x[Var-9]
	_ = x[InlineHTML-10]
	_ = x[symbolStart-11]
	_ = x[OpenTag-12]
	_ = x[CloseTag-13]
	_ = x[Dollar-14]
	_ = x[Backslash-15]
	_ = x[Qmark-16]
	_ = x[Lparen-17]
	_ = x[Rparen-18]
	_ = x[Lbrack-19]
	_ = x[Rbrack-20]
	_ = x[Lbrace-21]
	_ = x[Rbrace-22]
	_ = x[Add-23]
	_ = x[Sub-24]
	_ = x[Mul-25]
	_ = x[Quo-26]
	_ = x[Rem-27]
	_ = x[Pow-28]
	_ = x[And-29]
	_ = x[Or-30]
	_ = x[Xor-31]
	_ = x[Shl-32]
	_ = x[Shr-33]
	_ = x[Concat-34]
	_ = x[Assign-35]
	_ = x[Lt-36]
	_ = x[Gt-37]
	_ = x[Comma-38]
	_ = x[Colon-39]
	_ = x[DoubleColon-40]
	_ = x[Semicolon-41]
	_ = x[Ellipsis-42]
	_ = x[Arrow-43]
	_ = x[DoubleArrow-44]
	_ = x[symbolEnd-45]
	_ = x[keywordStart-46]
	_ = x[Abstract-47]
	_ = x[As-48]
	_ = x[Break-49]
	_ = x[Case-50]
	_ = x[Catch-51]
	_ = x[Class-52]
	_ = x[Clone-53]
	_ = x[Const-54]
	_ = x[Continue-55]
	_ = x[Declare-56]
	_ = x[Default-57]
	_ = x[Do-58]
	_ = x[Else-59]
	_ = x[Enum-60]
	_ = x[Extends-61]
	_ = x[Final-62]
	_ = x[Finally-63]
	_ = x[Fn-64]
	_ = x[For-65]
	_ = x[Foreach-66]
	_ = x[From-67]
	_ = x[Function-68]
	_ = x[Global-69]
	_ = x[Goto-70]
	_ = x[If-71]
	_ = x[Implements-72]
	_ = x[Instanceof-73]
	_ = x[Insteadof-74]
	_ = x[Interface-75]
	_ = x[Match-76]
	_ = x[Namespace-77]
	_ = x[New-78]
	_ = x[Private-79]
	_ = x[Protected-80]
	_ = x[Public-81]
	_ = x[Readonly-82]
	_ = x[Return-83]
	_ = x[Static-84]
	_ = x[Switch-85]
	_ = x[Throw-86]
	_ = x[Trait-87]
	_ = x[Try-88]
	_ = x[Use-89]
	_ = x[While-90]
	_ = x[Yield-91]
	_ = x[keywordEnd-92]
}

const _Type_name = "IllegalEOFWhitespaceCommentDocCommentIdentIntFloatStringVarInlineHTMLsymbolStart<?php?>$\\?()[]{}+-*/%**&|^<<>>.=<>,:::;...->=>symbolEndkeywordStartabstractasbreakcasecatchclasscloneconstcontinuedeclaredefaultdoelseenumextendsfinalfinallyfnforforeachfromfunctionglobalgotoifimplementsinstanceofinsteadofinterfacematchnamespacenewprivateprotectedpublicreadonlyreturnstaticswitchthrowtraittryusewhileyieldkeywordEnd"

var _Type_index = [...]uint16{0, 7, 10, 20, 27, 37, 42, 45, 50, 56, 59, 69, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 122, 124, 126, 135, 147, 155, 157, 162, 166, 171, 176, 181, 186, 194, 201, 208, 210, 214, 218, 225, 230, 237, 239, 242, 249, 253, 261, 267, 271, 273, 283, 293, 302, 311, 316, 325, 328, 335, 344, 350, 358, 364, 370, 376, 381, 386, 389, 392, 397, 402, 412}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
