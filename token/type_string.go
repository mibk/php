// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Whitespace-2]
	_ = x[Comment-3]
	_ = x[Ident-4]
	_ = x[String-5]
	_ = x[Var-6]
	_ = x[InlineHTML-7]
	_ = x[symbolStart-8]
	_ = x[OpenTag-9]
	_ = x[CloseTag-10]
	_ = x[Dollar-11]
	_ = x[Backslash-12]
	_ = x[Qmark-13]
	_ = x[Lparen-14]
	_ = x[Rparen-15]
	_ = x[Lbrack-16]
	_ = x[Rbrack-17]
	_ = x[Lbrace-18]
	_ = x[Rbrace-19]
	_ = x[Assign-20]
	_ = x[Lt-21]
	_ = x[Gt-22]
	_ = x[Comma-23]
	_ = x[Colon-24]
	_ = x[Semicolon-25]
	_ = x[Ellipsis-26]
	_ = x[Or-27]
	_ = x[And-28]
	_ = x[Quo-29]
	_ = x[Shl-30]
	_ = x[Shr-31]
	_ = x[symbolEnd-32]
	_ = x[keywordStart-33]
	_ = x[Abstract-34]
	_ = x[As-35]
	_ = x[Break-36]
	_ = x[Callable-37]
	_ = x[Case-38]
	_ = x[Catch-39]
	_ = x[Class-40]
	_ = x[Clone-41]
	_ = x[Const-42]
	_ = x[Continue-43]
	_ = x[Default-44]
	_ = x[Do-45]
	_ = x[Else-46]
	_ = x[Elseif-47]
	_ = x[Extends-48]
	_ = x[Final-49]
	_ = x[Finally-50]
	_ = x[Fn-51]
	_ = x[For-52]
	_ = x[Foreach-53]
	_ = x[Function-54]
	_ = x[Goto-55]
	_ = x[If-56]
	_ = x[Implements-57]
	_ = x[Instanceof-58]
	_ = x[Insteadof-59]
	_ = x[Interface-60]
	_ = x[Namespace-61]
	_ = x[New-62]
	_ = x[Parent-63]
	_ = x[Private-64]
	_ = x[Protected-65]
	_ = x[Public-66]
	_ = x[Return-67]
	_ = x[Self-68]
	_ = x[Static-69]
	_ = x[Switch-70]
	_ = x[Throw-71]
	_ = x[Trait-72]
	_ = x[Try-73]
	_ = x[Use-74]
	_ = x[While-75]
	_ = x[keywordEnd-76]
}

const _Type_name = "IllegalEOFWhitespaceCommentIdentStringVarInlineHTMLsymbolStart<?php?>$\\?()[]{}=<>,:;...|&/<<>>symbolEndkeywordStartabstractasbreakcallablecasecatchclasscloneconstcontinuedefaultdoelseelseifextendsfinalfinallyfnforforeachfunctiongotoifimplementsinstanceofinsteadofinterfacenamespacenewparentprivateprotectedpublicreturnselfstaticswitchthrowtraittryusewhilekeywordEnd"

var _Type_index = [...]uint16{0, 7, 10, 20, 27, 32, 38, 41, 51, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 92, 94, 103, 115, 123, 125, 130, 138, 142, 147, 152, 157, 162, 170, 177, 179, 183, 189, 196, 201, 208, 210, 213, 220, 228, 232, 234, 244, 254, 263, 272, 281, 284, 290, 297, 306, 312, 318, 322, 328, 334, 339, 344, 347, 350, 355, 365}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
